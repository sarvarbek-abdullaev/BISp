// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  TEACHER
  STUDENT
}

model Student {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  email        String         @unique
  name         String?
  birthYear    Int?
  password     String
  role         Role           @default(STUDENT)
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  studentGroup StudentGroup[]
}

model Teacher {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String?
  password  String
  role      Role     @default(TEACHER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Admin {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  email     String   @unique
  name      String?
  password  String
  role      Role     @default(ADMIN)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Group {
  id           String         @id @default(auto()) @map("_id") @db.ObjectId
  name         String
  year         Int?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  studentGroup StudentGroup[]
}

model StudentGroup {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  student   Student @relation(fields: [studentId], references: [id])
  studentId String  @map("_student_id") @db.ObjectId
  group     Group   @relation(fields: [groupId], references: [id])
  groupId   String  @map("_group_id") @db.ObjectId
}

model Module {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  code        String   @unique
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  courseId    String?  @db.ObjectId
  course      Course?  @relation(fields: [courseId], references: [id])
}

model Course {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  code        String   @unique
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  modules     Module[]
}
